<?xml version="1.0" encoding="UTF-8"?>
<exp:Export Version="3.0"
    xmlns:L7p="http://www.layer7tech.com/ws/policy"
    xmlns:exp="http://www.layer7tech.com/ws/policy/export" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
    <exp:References>
        <IncludedPolicyReference
            RefType="com.l7tech.console.policy.exporter.IncludedPolicyReference"
            guid="d5777f6f-d851-4d34-b25f-a6a65192d740" included="true"
            name="ConcurrencyLimitsChecker_EsbII" soap="false" type="INCLUDE_FRAGMENT">
            <wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
                <wsp:All wsp:Usage="Required">
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*************************************************************************"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** ConcurrencyLimitsChecker_EsbII"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** Setup values for concurrency limits. evaluate the limits"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** and setup result variables"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="**  23.5.2013 - Yoel Jacobsen: First version"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** @Autor: OlegB"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** @Version: v.1.0 - initial"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** @Creation Date: 30-jul-2013"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*************************************************************************"/>
                    </L7p:CommentAssertion>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="==>> ConcurrencyLimitsChecker_EsbII"/>
                    </L7p:AuditDetailAssertion>
                    <wsp:All wsp:Usage="Required">
                        <wsp:OneOrMore wsp:Usage="Required">
                            <wsp:OneOrMore wsp:Usage="Required">
                                <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:AssertionComment assertionComment="included">
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Fail if this is not a JMS protocol"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:AssertionComment>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${request.clientid}"/>
                                    <L7p:ExpressionIsVariable booleanValue="false"/>
                                    <L7p:Operator operatorNull="null"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                    </L7p:item>
                                    <L7p:item binary="included">
                                    <L7p:RightValue stringValue="Protocol:Protocol:JMS"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:SetVariable>
                                    <L7p:AssertionComment assertionComment="included">
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Try to read as integer from service configuration"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:AssertionComment>
                                    <L7p:Base64Expression stringValue="JHtjb25maWcuc2VydmljZU5hbWVBc3luY0NvbmN9"/>
                                    <L7p:DataType variableDataType="int"/>
                                    <L7p:VariableToSet stringValue="serviceNameConcurrency"/>
                                    </L7p:SetVariable>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// - Invoke case. The check will fail if not invoked from JMS."/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                </wsp:All>
                                <L7p:SetVariable>
                                    <L7p:AssertionComment assertionComment="included">
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Try to read as integer from service configuration"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:AssertionComment>
                                    <L7p:Base64Expression stringValue="JHtjb25maWcuc2VydmljZU5hbWVTeW5jQ29uY30="/>
                                    <L7p:DataType variableDataType="int"/>
                                    <L7p:VariableToSet stringValue="serviceNameConcurrency"/>
                                </L7p:SetVariable>
                                <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Set concurrecny level differently for the Invoke and QDRAIN flows"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:assertionComment>
                            </wsp:OneOrMore>
                            <L7p:SetVariable>
                                <L7p:AssertionComment assertionComment="included">
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Otherwise get the default from cluster property"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:AssertionComment>
                                <L7p:Base64Expression stringValue="JHtnYXRld2F5LnBhcnRuZXIuZGVmYXVsdC5jb25jdXJyZW5jeS5zZXJ2aWNlTmFtZX0="/>
                                <L7p:DataType variableDataType="int"/>
                                <L7p:VariableToSet stringValue="serviceNameConcurrency"/>
                            </L7p:SetVariable>
                            <L7p:assertionComment>
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Setup ${serviceNameConcurrency}"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:assertionComment>
                        </wsp:OneOrMore>
                        <wsp:OneOrMore wsp:Usage="Required">
                            <L7p:ComparisonAssertion>
                                <L7p:AssertionComment assertionComment="included">
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Continue only if this IS a PLSQL service"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:AssertionComment>
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:Expression1 stringValue="${config.method}"/>
                                <L7p:ExpressionIsVariable booleanValue="false"/>
                                <L7p:Operator operatorNull="null"/>
                                <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                    </L7p:item>
                                    <L7p:item binary="included">
                                    <L7p:Operator operator="NE"/>
                                    <L7p:RightValue stringValue="PLSQL"/>
                                    </L7p:item>
                                </L7p:Predicates>
                            </L7p:ComparisonAssertion>
                            <wsp:All wsp:Usage="Required">
                                <L7p:LookupDynamicContextVariables>
                                    <L7p:AssertionComment assertionComment="included">
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Lookup a cluster property with the value of the limit"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:AssertionComment>
                                    <L7p:SourceVariable stringValue="gateway.partner.concurrency.${config.connection}"/>
                                    <L7p:TargetDataType variableDataType="string"/>
                                </L7p:LookupDynamicContextVariables>
                                <L7p:AuditDetailAssertion>
                                    <L7p:Detail stringValue="gateway.partner.concurrency.${config.connection} found to be ${lookup.output}"/>
                                </L7p:AuditDetailAssertion>
                                <L7p:SetVariable>
                                    <L7p:AssertionComment assertionComment="included">
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Try to read as integer from service configuration"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:AssertionComment>
                                    <L7p:Base64Expression stringValue="JHtsb29rdXAub3V0cHV0fQ=="/>
                                    <L7p:DataType variableDataType="int"/>
                                    <L7p:VariableToSet stringValue="backendConcurrency"/>
                                </L7p:SetVariable>
                                <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Parse the value from a cluster propery partner.concurrency.${config.connection}"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:assertionComment>
                            </wsp:All>
                            <L7p:SetVariable>
                                <L7p:AssertionComment assertionComment="included">
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Otherwise get the default from cluster property"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:AssertionComment>
                                <L7p:Base64Expression stringValue="JHtnYXRld2F5LnBhcnRuZXIuZGVmYXVsdC5jb25jdXJyZW5jeS5iYWNrZW5kfQ=="/>
                                <L7p:DataType variableDataType="int"/>
                                <L7p:VariableToSet stringValue="backendConcurrency"/>
                            </L7p:SetVariable>
                            <L7p:assertionComment>
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Setup ${backendConcurrency}"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:assertionComment>
                        </wsp:OneOrMore>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Prepare values for concurency limit"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <wsp:OneOrMore wsp:Usage="Required">
                        <wsp:All wsp:Usage="Required">
                            <L7p:RateLimit>
                                <L7p:CounterName stringValue="concurrency.${serviceName}"/>
                                <L7p:MaxConcurrency stringValue="${serviceNameConcurrency}"/>
                                <L7p:MaxRequestsPerSecond stringValue="100000"/>
                                <L7p:SplitRateLimitAcrossNodes booleanValue="false"/>
                            </L7p:RateLimit>
                            <L7p:SetVariable>
                                <L7p:AssertionComment assertionComment="included">
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// record &quot;not reached&quot;"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:AssertionComment>
                                <L7p:Base64Expression stringValue="ZmFsc2U="/>
                                <L7p:VariableToSet stringValue="concurrency.serviceName.reached"/>
                            </L7p:SetVariable>
                            <L7p:assertionComment>
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Apply concurrency limit. Set ${concurrency.serviceName.reached} to false if rate not reached"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:assertionComment>
                        </wsp:All>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="dHJ1ZQ=="/>
                            <L7p:VariableToSet stringValue="concurrency.serviceName.reached"/>
                        </L7p:SetVariable>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Check service_name concurency "/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:OneOrMore>
                    <wsp:OneOrMore wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:AssertionComment assertionComment="included">
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Continue only if this IS a PLSQL service"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:AssertionComment>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${config.method}"/>
                            <L7p:ExpressionIsVariable booleanValue="false"/>
                            <L7p:Operator operatorNull="null"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                </L7p:item>
                                <L7p:item binary="included">
                                    <L7p:Operator operator="NE"/>
                                    <L7p:RightValue stringValue="PLSQL"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <wsp:All wsp:Usage="Required">
                            <L7p:RateLimit>
                                <L7p:CounterName stringValue="concurrency.${config.connection}"/>
                                <L7p:MaxConcurrency stringValue="${backendConcurrency}"/>
                                <L7p:MaxRequestsPerSecond stringValue="1000000"/>
                                <L7p:SplitRateLimitAcrossNodes booleanValue="false"/>
                            </L7p:RateLimit>
                            <L7p:SetVariable>
                                <L7p:AssertionComment assertionComment="included">
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// record &quot;not reached&quot;"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:AssertionComment>
                                <L7p:Base64Expression stringValue="ZmFsc2U="/>
                                <L7p:VariableToSet stringValue="concurrency.backend.reached"/>
                            </L7p:SetVariable>
                            <L7p:assertionComment>
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Apply concurrency limit. Set ${concurrency.backend.reached} to false if rate not reached"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:assertionComment>
                        </wsp:All>
                        <L7p:SetVariable>
                            <L7p:AssertionComment assertionComment="included">
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// record &quot;not reached&quot;"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:AssertionComment>
                            <L7p:Base64Expression stringValue="dHJ1ZQ=="/>
                            <L7p:VariableToSet stringValue="concurrency.backend.reached"/>
                        </L7p:SetVariable>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Check connection concurency  for ORACLE services"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:OneOrMore>
                    <L7p:RateLimitQuery>
                        <L7p:CounterName stringValue="concurrency.${serviceName}"/>
                        <L7p:VariablePrefix stringValue="ratelimit.serviceName"/>
                    </L7p:RateLimitQuery>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHtyYXRlbGltaXQuc2VydmljZU5hbWUuY291bnRlci5jb25jdXJyZW5jeX0="/>
                        <L7p:VariableToSet stringValue="concurrency.serviceName.value"/>
                    </L7p:SetVariable>
                    <wsp:OneOrMore wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:AssertionComment assertionComment="included">
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Continue only if this IS a PLSQL service"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:AssertionComment>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${config.method}"/>
                            <L7p:ExpressionIsVariable booleanValue="false"/>
                            <L7p:Operator operatorNull="null"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                </L7p:item>
                                <L7p:item binary="included">
                                    <L7p:Operator operator="NE"/>
                                    <L7p:RightValue stringValue="PLSQL"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <wsp:All wsp:Usage="Required">
                            <L7p:RateLimitQuery>
                                <L7p:CounterName stringValue="concurrency.${config.connection}"/>
                                <L7p:VariablePrefix stringValue="ratelimit.backend"/>
                            </L7p:RateLimitQuery>
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="JHtyYXRlbGltaXQuYmFja2VuZC5jb3VudGVyLmNvbmN1cnJlbmN5fQ=="/>
                                <L7p:VariableToSet stringValue="concurrency.backend.value"/>
                            </L7p:SetVariable>
                            <L7p:assertionComment>
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// If this is a PLSQL service .."/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:assertionComment>
                        </wsp:All>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// If this is a PLSQL service, query the backend limit as well"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:OneOrMore>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="&lt;&lt;== ConcurrencyLimitsChecker_EsbII"/>
                    </L7p:AuditDetailAssertion>
                </wsp:All>
            </wsp:Policy>
        </IncludedPolicyReference>
    </exp:References>
    <wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
        <wsp:All wsp:Usage="Required">
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="*************************************************************************"/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="**  Asynchronous Decision EsbII"/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="** "/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="** Determine if request requires synchronous or asynchronous invocation"/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="** Set partner.invokeMethod"/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="** "/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="**  23.5.2013 - Yoel Jacobsen: Add concurrency limits"/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="**  ^---> Apply service name and connection based limits"/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="**  09.6.2013 - Yoel Jacobsen: Add asyncReason"/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="** "/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="** "/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="** @Autor: OlegB"/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="** @Version: v.2.0 - EsbII"/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="** @Creation Date: 30-jul-2013"/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="** "/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="*************************************************************************"/>
            </L7p:CommentAssertion>
            <L7p:AuditDetailAssertion>
                <L7p:Detail stringValue="==>> Async Decision"/>
            </L7p:AuditDetailAssertion>
            <L7p:SetVariable>
                <L7p:AssertionComment assertionComment="included">
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="// Initialize as asynchronous, fall back to synchronous"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:AssertionComment>
                <L7p:Base64Expression stringValue="YXN5bmNocm9ub3Vz"/>
                <L7p:VariableToSet stringValue="partner.invokeMethod"/>
            </L7p:SetVariable>
            <L7p:SetVariable>
                <L7p:AssertionComment assertionComment="included">
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="// Initialize as asynchronous, fall back to synchronous"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:AssertionComment>
                <L7p:Base64Expression stringValue="ZGVmYXVsdA=="/>
                <L7p:VariableToSet stringValue="partner.asyncReason"/>
            </L7p:SetVariable>
            <L7p:Include>
                <L7p:PolicyGuid stringValue="d5777f6f-d851-4d34-b25f-a6a65192d740"/>
            </L7p:Include>
            <wsp:OneOrMore wsp:Usage="Required">
                <wsp:All wsp:Usage="Required">
                    <L7p:ComparisonAssertion>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${gateway.partner.configuration.forceAllSynchronous}"/>
                        <L7p:Operator operatorNull="null"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item dataType="included">
                                <L7p:Type variableDataType="boolean"/>
                            </L7p:item>
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:RightValue stringValue="true"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:SetVariable>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Default is to fall back on Synchronous invocation"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:Base64Expression stringValue="c3luY2hyb25vdXM="/>
                        <L7p:VariableToSet stringValue="partner.invokeMethod"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Initialize as asynchronous, fall back to synchronous"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:Base64Expression stringValue="Zm9yY2VBbGxTeW5j"/>
                        <L7p:VariableToSet stringValue="partner.asyncReason"/>
                    </L7p:SetVariable>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="forceAllSynchronous"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// Check for forceAllSynchronous"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:ComparisonAssertion>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${gateway.partner.configuration.forceAllAsynchronous}"/>
                        <L7p:Operator operatorNull="null"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item dataType="included">
                                <L7p:Type variableDataType="boolean"/>
                            </L7p:item>
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:RightValue stringValue="true"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:SetVariable>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Default is to fall back on Synchronous invocation"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:Base64Expression stringValue="YXN5bmNocm9ub3Vz"/>
                        <L7p:VariableToSet stringValue="partner.invokeMethod"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Initialize as asynchronous, fall back to synchronous"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:Base64Expression stringValue="Zm9yY2VBbGxBU3luYw=="/>
                        <L7p:VariableToSet stringValue="partner.asyncReason"/>
                    </L7p:SetVariable>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="forceAllASynchronous"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// Check for forceAllASynchronous"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:RequestXpathAssertion>
                        <L7p:VariablePrefix stringValue=""/>
                        <L7p:XpathExpression xpathExpressionValue="included">
                            <L7p:Expression stringValue="//invocationParameters[forceSync='true']"/>
                            <L7p:Namespaces mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="soapenv"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="ser"/>
                                    <L7p:value stringValue="http://www.orange.co.il/services"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                </L7p:entry>
                            </L7p:Namespaces>
                            <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                        </L7p:XpathExpression>
                    </L7p:RequestXpathAssertion>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="Service is FORCED to be synchronous"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:SetVariable>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Default is to fall back on Synchronous invocation"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:Base64Expression stringValue="c3luY2hyb25vdXM="/>
                        <L7p:VariableToSet stringValue="partner.invokeMethod"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Initialize as asynchronous, fall back to synchronous"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:Base64Expression stringValue="Zm9yY2VTeW5j"/>
                        <L7p:VariableToSet stringValue="partner.asyncReason"/>
                    </L7p:SetVariable>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// Before anything, check if the XML message has forceSync set to True (force Synchronous)"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:ComparisonAssertion>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${config.async}"/>
                        <L7p:ExpressionIsVariable booleanValue="false"/>
                        <L7p:Operator operatorNull="null"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item dataType="included">
                                <L7p:Type variableDataType="boolean"/>
                            </L7p:item>
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:RightValue stringValue="true"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:SetVariable>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Initialize as asynchronous, fall back to synchronous"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:Base64Expression stringValue="Y29uZmlndXJhdGlvbg=="/>
                        <L7p:VariableToSet stringValue="partner.asyncReason"/>
                    </L7p:SetVariable>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="Service configuration requires async handling"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// Service configuration specifies async invocation"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:ComparisonAssertion>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${concurrency.serviceName.reached}"/>
                        <L7p:ExpressionIsVariable booleanValue="false"/>
                        <L7p:Operator operatorNull="null"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item dataType="included">
                                <L7p:Type variableDataType="boolean"/>
                            </L7p:item>
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:RightValue stringValue="true"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:SetVariable>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Initialize as asynchronous, fall back to synchronous"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:Base64Expression stringValue="c2VydmljZU5hbWVDb25jdXJyZW5jeQ=="/>
                        <L7p:VariableToSet stringValue="partner.asyncReason"/>
                    </L7p:SetVariable>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="Service concurrency limit reached"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// Service concurrency limit reached"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:ComparisonAssertion>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${concurrency.backend.reached}"/>
                        <L7p:ExpressionIsVariable booleanValue="false"/>
                        <L7p:Operator operatorNull="null"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item dataType="included">
                                <L7p:Type variableDataType="boolean"/>
                            </L7p:item>
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:RightValue stringValue="true"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:SetVariable>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Initialize as asynchronous, fall back to synchronous"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:Base64Expression stringValue="YmFja2VuZENvbmN1cnJlbmN5"/>
                        <L7p:VariableToSet stringValue="partner.asyncReason"/>
                    </L7p:SetVariable>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="Backend concurrency limit reached"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// For PLSQL services, backend concurrency limit reached"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:RequestXpathAssertion>
                        <L7p:VariablePrefix stringValue=""/>
                        <L7p:XpathExpression xpathExpressionValue="included">
                            <L7p:Expression stringValue="//invocationParameters[async='true']"/>
                            <L7p:Namespaces mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="soapenv"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="ser"/>
                                    <L7p:value stringValue="http://www.orange.co.il/services"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                </L7p:entry>
                            </L7p:Namespaces>
                            <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                        </L7p:XpathExpression>
                    </L7p:RequestXpathAssertion>
                    <L7p:SetVariable>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Initialize as asynchronous, fall back to synchronous"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:Base64Expression stringValue="cmVxdWVzdE1lc3NhZ2U="/>
                        <L7p:VariableToSet stringValue="partner.asyncReason"/>
                    </L7p:SetVariable>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="Request content requests async handling"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// Wrapper asked for asynchronous invocation"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:All>
                <wsp:All L7p:Enabled="false" wsp:Usage="Required">
                    <L7p:FalseAssertion>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="LEFT.COMMENT"/>
                                    <L7p:value stringValue="REMOVE ME"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:Enabled booleanValue="false"/>
                    </L7p:FalseAssertion>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// Wrapper was asked for SLEEP time smaller than average run time"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:All>
                <wsp:All L7p:Enabled="false" wsp:Usage="Required">
                    <L7p:FalseAssertion>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="LEFT.COMMENT"/>
                                    <L7p:value stringValue="REMOVE ME"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:Enabled booleanValue="false"/>
                    </L7p:FalseAssertion>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// Average run time larger than threshold"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:SetVariable>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Default is to fall back on Synchronous invocation"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:Base64Expression stringValue="c3luY2hyb25vdXM="/>
                        <L7p:VariableToSet stringValue="partner.invokeMethod"/>
                    </L7p:SetVariable>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="No asynch handling requested, falling back on synchronous handling"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// Fall back on synchronous"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:All>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="// Check for various reasons to use asynchronous, fall back on synchronous"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:OneOrMore>
            <L7p:AuditDetailAssertion>
                <L7p:Detail stringValue="&lt;&lt;== Async Decision"/>
            </L7p:AuditDetailAssertion>
        </wsp:All>
    </wsp:Policy>
</exp:Export>
