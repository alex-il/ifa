<?xml version="1.0" encoding="UTF-8"?>
<exp:Export Version="3.0"
    xmlns:L7p="http://www.layer7tech.com/ws/policy"
    xmlns:exp="http://www.layer7tech.com/ws/policy/export" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
    <exp:References>
        <IncludedPolicyReference
            RefType="com.l7tech.console.policy.exporter.IncludedPolicyReference"
            guid="964c6b3a-568d-40b4-adea-3cb3b1118e13" included="true"
            name="Legacy - IF_REQUEST Validator By Xsd" soap="false" type="INCLUDE_FRAGMENT">
            <wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
                <wsp:All wsp:Usage="Required">
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*************************************************************************"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** Policy Fragment: Legacy - IF_REQUEST  Validator By Xsd"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** Check the IF_REQUEST XML by predefined XSD"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** Parameters:"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** ${xmlcheck.isCorrect} ir true if XML match the XSD. false otherwise."/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="**  ${xmlcheck.xmlToCheckByXsd} IF_REQUEST to check by XSD"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*************************************************************************"/>
                    </L7p:CommentAssertion>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="SUZfUkVRVUVTVA=="/>
                        <L7p:VariableToSet stringValue="xmlcheck.messageType"/>
                    </L7p:SetVariable>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="Policy Fragment: Legacy - ${xmlcheck.messageType} Validator By Xsd"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:Include>
                        <L7p:PolicyGuid stringValue="38d37959-25bd-45ef-81e4-c7276e5b88ef"/>
                    </L7p:Include>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHt4bWxjaGVjay5pc0NvcnJlY3R9"/>
                        <L7p:VariableToSet stringValue="IF_REQUEST.xml.isCorrect"/>
                    </L7p:SetVariable>
                </wsp:All>
            </wsp:Policy>
        </IncludedPolicyReference>
        <IncludedPolicyReference
            RefType="com.l7tech.console.policy.exporter.IncludedPolicyReference"
            guid="38d37959-25bd-45ef-81e4-c7276e5b88ef" included="true"
            name="Legacy - XML Request Reply Validator By Xsd"
            soap="false" type="INCLUDE_FRAGMENT">
            <wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
                <wsp:All wsp:Usage="Required">
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*************************************************************************"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** Legacy - XML Request/Reply Validator By Xsd"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** Check the IF_REPLY/IF_REQUEST XML by predefined XSD"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** Parameters:"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** ${xmlcheck.messageType} value is one og the IF_REQUEST, IF_REPLY"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** ${xmlcheck.isCorrect} ir true if XML match the XSD. false otherwise."/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*************************************************************************"/>
                    </L7p:CommentAssertion>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="Policy Fragment: Legacy - XML Request/Reply Validator By Xsd"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="dHJ1ZQ=="/>
                        <L7p:VariableToSet stringValue="xmlcheck.isCorrect"/>
                    </L7p:SetVariable>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="xmlcheck.xmlToCheckByXsd:${xmlcheck.xmlToCheckByXsd}"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHt4bWxjaGVjay54bWxUb0NoZWNrQnlYc2R9"/>
                        <L7p:VariableToSet stringValue="responseOut"/>
                    </L7p:SetVariable>
                    <L7p:Include>
                        <L7p:PolicyGuid stringValue="0c7132a7-08bd-4b41-8858-738c09da0f22"/>
                    </L7p:Include>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHtyZXNwb25zZU91dH0="/>
                        <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                        <L7p:DataType variableDataType="message"/>
                        <L7p:VariableToSet stringValue="local.xmlToCheckByXsd"/>
                    </L7p:SetVariable>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="${xmlcheck.messageType} xmlToCheck:= ${responseOut}"/>
                    </L7p:AuditDetailAssertion>
                    <wsp:OneOrMore wsp:Usage="Required">
                        <wsp:OneOrMore wsp:Usage="Required">
                            <L7p:ComparisonAssertion>
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:Expression1 stringValue="xmlcheck.messageType"/>
                                <L7p:FailIfVariableNotFound booleanValue="false"/>
                                <L7p:Operator operatorNull="null"/>
                                <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                    </L7p:item>
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:RightValue stringValue="IF_REPLY"/>
                                    </L7p:item>
                                </L7p:Predicates>
                            </L7p:ComparisonAssertion>
                            <wsp:OneOrMore wsp:Usage="Required">
                                <L7p:SchemaValidation>
                                    <L7p:OtherTargetMessageVariable stringValue="local.xmlToCheckByXsd"/>
                                    <L7p:ResourceInfo globalResourceInfo="included">
                                    <L7p:Id stringValue="ReplyXsdValidator"/>
                                    </L7p:ResourceInfo>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:ValidationTarget validationTarget="ENVELOPE"/>
                                </L7p:SchemaValidation>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="ZmFsc2U="/>
                                    <L7p:VariableToSet stringValue="xmlcheck.isCorrect"/>
                                </L7p:SetVariable>
                            </wsp:OneOrMore>
                        </wsp:OneOrMore>
                        <wsp:OneOrMore wsp:Usage="Required">
                            <L7p:ComparisonAssertion>
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:Expression1 stringValue="xmlcheck.messageType"/>
                                <L7p:FailIfVariableNotFound booleanValue="false"/>
                                <L7p:Operator operatorNull="null"/>
                                <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                    </L7p:item>
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:RightValue stringValue="IF_REQUEST"/>
                                    </L7p:item>
                                </L7p:Predicates>
                            </L7p:ComparisonAssertion>
                            <wsp:OneOrMore wsp:Usage="Required">
                                <L7p:SchemaValidation>
                                    <L7p:OtherTargetMessageVariable stringValue="local.xmlToCheckByXsd"/>
                                    <L7p:ResourceInfo globalResourceInfo="included">
                                    <L7p:Id stringValue="ReplyXsdValidator"/>
                                    </L7p:ResourceInfo>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:ValidationTarget validationTarget="ENVELOPE"/>
                                </L7p:SchemaValidation>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="ZmFsc2U="/>
                                    <L7p:VariableToSet stringValue="xmlcheck.isCorrect"/>
                                </L7p:SetVariable>
                            </wsp:OneOrMore>
                        </wsp:OneOrMore>
                    </wsp:OneOrMore>
                    <wsp:All wsp:Usage="Required">
                        <L7p:AuditDetailAssertion>
                            <L7p:Detail stringValue="--- Service ${serviceName}.  The ${xmlcheck.messageType} is ${xmlcheck.isCorrect}"/>
                            <L7p:Level stringValue="WARNING"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:AuditDetailAssertion>
                            <L7p:AssertionComment assertionComment="included">
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="//this message go to the Splunk"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:AssertionComment>
                            <L7p:CustomLoggerSuffix stringValue="devlogs"/>
                            <L7p:Detail stringValue="${xmlcheck.messageType}=${xmlcheck.isCorrect}"/>
                            <L7p:Enabled booleanValue="false"/>
                            <L7p:LoggingOnly booleanValue="true"/>
                        </L7p:AuditDetailAssertion>
                    </wsp:All>
                </wsp:All>
            </wsp:Policy>
        </IncludedPolicyReference>
        <IncludedPolicyReference
            RefType="com.l7tech.console.policy.exporter.IncludedPolicyReference"
            guid="0c7132a7-08bd-4b41-8858-738c09da0f22" included="true"
            name="Legacy - Escaper Restorer" soap="false" type="INCLUDE_FRAGMENT">
            <wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
                <wsp:All wsp:Usage="Required">
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*************************************************************************"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="**Legacy  Escaper"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** Escape request/response used by regular expession"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*************************************************************************"/>
                    </L7p:CommentAssertion>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="Policy Fragment: Legacy - Escaper"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHtqZGJjUXVlcnkucmV0dXJuX3ZhbHVlfQ=="/>
                        <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                        <L7p:DataType variableDataType="message"/>
                        <L7p:Enabled booleanValue="false"/>
                        <L7p:VariableToSet stringValue="responseOut"/>
                    </L7p:SetVariable>
                    <L7p:Regex>
                        <L7p:AutoTarget booleanValue="false"/>
                        <L7p:OtherTargetMessageVariable stringValue="responseOut"/>
                        <L7p:Regex stringValue="&amp;amp;"/>
                        <L7p:RegexName stringValue="Replace &amp;amp; with &amp;"/>
                        <L7p:Replace booleanValue="true"/>
                        <L7p:Replacement stringValue="&amp;"/>
                        <L7p:Target target="OTHER"/>
                    </L7p:Regex>
                    <L7p:Regex>
                        <L7p:AutoTarget booleanValue="false"/>
                        <L7p:OtherTargetMessageVariable stringValue="responseOut"/>
                        <L7p:Regex stringValue="&amp;quot;"/>
                        <L7p:RegexName stringValue="Replace &amp;quot; with &quot;"/>
                        <L7p:Replace booleanValue="true"/>
                        <L7p:Replacement stringValue="&quot;"/>
                        <L7p:Target target="OTHER"/>
                    </L7p:Regex>
                    <L7p:Regex>
                        <L7p:AutoTarget booleanValue="false"/>
                        <L7p:OtherTargetMessageVariable stringValue="responseOut"/>
                        <L7p:Regex stringValue="&amp;apos;"/>
                        <L7p:RegexName stringValue="Replace &amp;apos; with \' (for the database)"/>
                        <L7p:Replace booleanValue="true"/>
                        <L7p:Replacement stringValue="\\'"/>
                        <L7p:Target target="OTHER"/>
                    </L7p:Regex>
                    <L7p:Regex>
                        <L7p:AutoTarget booleanValue="false"/>
                        <L7p:OtherTargetMessageVariable stringValue="responseOut"/>
                        <L7p:Regex stringValue="&amp;lt;"/>
                        <L7p:RegexName stringValue="Replace &amp;lt; with &lt;"/>
                        <L7p:Replace booleanValue="true"/>
                        <L7p:Replacement stringValue="&lt;"/>
                        <L7p:Target target="OTHER"/>
                    </L7p:Regex>
                    <L7p:Regex>
                        <L7p:AutoTarget booleanValue="false"/>
                        <L7p:OtherTargetMessageVariable stringValue="responseOut"/>
                        <L7p:Regex stringValue="&amp;gt;"/>
                        <L7p:RegexName stringValue="Replace &amp;gt; with >"/>
                        <L7p:Replace booleanValue="true"/>
                        <L7p:Replacement stringValue=">"/>
                        <L7p:Target target="OTHER"/>
                    </L7p:Regex>
                    <L7p:HardcodedResponse>
                        <L7p:Base64ResponseBody stringValue="JHtyZXNwb25zZU91dC5tYWlucGFydH0="/>
                        <L7p:Enabled booleanValue="false"/>
                    </L7p:HardcodedResponse>
                </wsp:All>
            </wsp:Policy>
        </IncludedPolicyReference>
        <ExternalSchema
            RefType="com.l7tech.console.policy.exporter.ExternalSchemaReference" schemaLocation="ReplyXsdValidator"/>
        <IncludedPolicyReference
            RefType="com.l7tech.console.policy.exporter.IncludedPolicyReference"
            guid="b91a07a1-1fda-45b9-83a7-519c3c4f528c" included="true"
            name="Legacy - HTTP Renderer" soap="false" type="INCLUDE_FRAGMENT">
            <wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
                <wsp:All wsp:Usage="Required">
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="Policy Fragment: Legacy - HTTP Render"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="***************** HTTP RENDER: ${config.xmlRender}"/>
                        <L7p:Enabled booleanValue="false"/>
                    </L7p:AuditDetailAssertion>
                    <wsp:OneOrMore wsp:Usage="Required">
                        <wsp:All wsp:Usage="Required">
                            <L7p:ComparisonAssertion>
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:Expression1 stringValue="${config.xmlRender}"/>
                                <L7p:FailIfVariableNotFound booleanValue="false"/>
                                <L7p:Operator operatorNull="null"/>
                                <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                    </L7p:item>
                                    <L7p:item binary="included">
                                    <L7p:RightValue stringValue="Y"/>
                                    </L7p:item>
                                </L7p:Predicates>
                            </L7p:ComparisonAssertion>
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="PElGX1JFUExZPg0KCTxTRVJWSUNFX05BTUU+JHtzZXJ2aWNlTmFtZX08L1NFUlZJQ0VfTkFNRT4NCgk8UkVRVUVTVF9TVEFUVVM+DQoJCTxTVEFUVVM+U1VDQ0VTUzwvU1RBVFVTPg0KCQk8U1RBVFVTX0NPREU+MDwvU1RBVFVTX0NPREU+DQoJCTxTVEFUVVNfTUVTU0FHRSAvPg0KCTwvUkVRVUVTVF9TVEFUVVM+DQoJPFJFUVVFU1RfUkVTVUxUPiR7SFRUUG91dHB1dC5tYWlucGFydH08L1JFUVVFU1RfUkVTVUxUPg0KPC9JRl9SRVBMWT4="/>
                                <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                                <L7p:DataType variableDataType="message"/>
                                <L7p:VariableToSet stringValue="HTTPoutput"/>
                            </L7p:SetVariable>
                        </wsp:All>
                        <L7p:TrueAssertion/>
                    </wsp:OneOrMore>
                </wsp:All>
            </wsp:Policy>
        </IncludedPolicyReference>
        <IncludedPolicyReference
            RefType="com.l7tech.console.policy.exporter.IncludedPolicyReference"
            guid="346df765-1a89-4206-b9de-97ddcbeeb25a" included="true"
            name="Legacy - Last details" soap="false" type="INCLUDE_FRAGMENT">
            <wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
                <wsp:All wsp:Usage="Required">
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*************************************************************************"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="**Legacy  Last Details"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** Escape request/response used by regular expession"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*************************************************************************"/>
                    </L7p:CommentAssertion>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="Policy Fragment: Legacy - Last Details"/>
                    </L7p:AuditDetailAssertion>
                    <wsp:All wsp:Usage="Required">
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue=""/>
                            <L7p:VariableToSet stringValue="audits"/>
                        </L7p:SetVariable>
                        <L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="audit.details" variablePrefix="ad">
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="JHthZC5jdXJyZW50LnRpbWV9"/>
                                <L7p:DataType variableDataType="dateTime"/>
                                <L7p:DateOffsetExpression stringValue=""/>
                                <L7p:VariableToSet stringValue="ad.current.time"/>
                            </L7p:SetVariable>
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="JHthdWRpdHN9DQoke2FkLmN1cnJlbnQudGltZX0gLSAke2FkLmN1cnJlbnQuZnVsbHRleHR9"/>
                                <L7p:VariableToSet stringValue="audits"/>
                            </L7p:SetVariable>
                        </L7p:ForEachLoop>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="PElGX1JFUExZPg0KPFNFUlZJQ0VfTkFNRT4ke3NlcnZpY2VOYW1lfTwvU0VSVklDRV9OQU1FPg0KPFJFUVVFU1RfU1RBVFVTPg0KPFNUQVRVUz5FUlJPUjwvU1RBVFVTPg0KPFNUQVRVU19DT0RFPjc8L1NUQVRVU19DT0RFPg0KPFNUQVRVU19NRVNTQUdFPkVTQjoke2F1ZGl0c30NCiR7YXNzZXJ0aW9uLm51bWJlcnN0cn0gDQo8L1NUQVRVU19NRVNTQUdFPg0KPC9SRVFVRVNUX1NUQVRVUz4NCjwvSUZfUkVQTFk+"/>
                            <L7p:VariableToSet stringValue="jdbcQuery.return_value"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtqZGJjUXVlcnkucmV0dXJuX3ZhbHVlfQ=="/>
                            <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                            <L7p:DataType variableDataType="message"/>
                            <L7p:VariableToSet stringValue="HTTPoutput"/>
                        </L7p:SetVariable>
                    </wsp:All>
                </wsp:All>
            </wsp:Policy>
        </IncludedPolicyReference>
        <IncludedPolicyReference
            RefType="com.l7tech.console.policy.exporter.IncludedPolicyReference"
            guid="9ed92750-faab-438d-aba9-88d33ccb0dc8" included="true"
            name="Legacy - Add Xml Header" soap="false" type="INCLUDE_FRAGMENT">
            <wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
                <wsp:All wsp:Usage="Required">
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*************************************************************************"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** Legacy - Add Xml Header"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** add: ${payload.result} =&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>${payload.result}"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*************************************************************************"/>
                    </L7p:CommentAssertion>
                    <L7p:AuditDetailAssertion>
                        <L7p:CustomLoggerSuffix stringValue="DBE"/>
                        <L7p:Detail stringValue="Policy Fragment: Legacy - Add Xml Header"/>
                        <L7p:LoggingOnly booleanValue="true"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="--- payload.result= ${payload.result}"/>
                        <L7p:Enabled booleanValue="false"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4ke3BheWxvYWQucmVzdWx0fQ=="/>
                        <L7p:VariableToSet stringValue="payload.result"/>
                    </L7p:SetVariable>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="--- NOT encoding payload.result= ${payload.result}"/>
                        <L7p:Enabled booleanValue="false"/>
                    </L7p:AuditDetailAssertion>
                </wsp:All>
            </wsp:Policy>
        </IncludedPolicyReference>
        <IncludedPolicyReference
            RefType="com.l7tech.console.policy.exporter.IncludedPolicyReference"
            guid="0953a947-46ac-460b-a337-4fb613062d65" included="true"
            name="Legacy - Parse POST arguments" soap="false" type="INCLUDE_FRAGMENT">
            <wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
                <wsp:All wsp:Usage="Required">
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*************************************************************************"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** Legacy Parse POST Arguments"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** Parse the payload for HTTP POST services"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** Build ${argumets} in order, copy to ${argumentsXml} msg"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*************************************************************************"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*** Do the parsing"/>
                    </L7p:CommentAssertion>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="Policy Fragment: Legacy - Parse POST arguments"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="Parsing POST: ${config.arguments}"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:Split>
                        <L7p:InputVariable stringValue="config.arguments"/>
                        <L7p:OutputVariable stringValue="params.list"/>
                    </L7p:Split>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="payload.result = ${payload.result}"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:SetVariable>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Cast the payload to a message type"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:Base64Expression stringValue="JHtwYXlsb2FkLnJlc3VsdH0="/>
                        <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                        <L7p:DataType variableDataType="message"/>
                        <L7p:VariableToSet stringValue="payload.xml"/>
                    </L7p:SetVariable>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="params.list = ${params.list}"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="payload.xml: ${payload.xml.mainpart}"/>
                    </L7p:AuditDetailAssertion>
                    <wsp:OneOrMore wsp:Usage="Required">
                        <wsp:All wsp:Usage="Required">
                            <wsp:OneOrMore wsp:Usage="Required">
                                <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${config.queryString}"/>
                                    <L7p:Operator operatorNull="null"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                    </L7p:item>
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:Operator operator="CONTAINS"/>
                                    <L7p:RightValue stringValue="[CDATA["/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                </L7p:ComparisonAssertion>
                                <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtjb25maWcucXVlcnlTdHJpbmd9"/>
                                    <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:VariableToSet stringValue="responseOut"/>
                                    </L7p:SetVariable>
                                    <L7p:Include>
                                    <L7p:PolicyGuid stringValue="9b24fba0-6ba9-4c94-9d2b-04f611c4ff46"/>
                                    </L7p:Include>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtyZXNwb25zZU91dH0="/>
                                    <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:VariableToSet stringValue="argumentsXml"/>
                                    </L7p:SetVariable>
                                </wsp:All>
                                <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="//check  if queryStryng  DOES NOT contain CDATA"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:assertionComment>
                            </wsp:OneOrMore>
                            <wsp:OneOrMore wsp:Usage="Required">
                                <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${config.queryString}"/>
                                    <L7p:Operator operatorNull="null"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                    </L7p:item>
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:Operator operator="CONTAINS"/>
                                    <L7p:RightValue stringValue="[CDATA["/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                </L7p:ComparisonAssertion>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtjb25maWcucXVlcnlTdHJpbmd9"/>
                                    <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:VariableToSet stringValue="argumentsXml"/>
                                </L7p:SetVariable>
                                <wsp:All L7p:Enabled="false" wsp:Usage="Required">
                                    <L7p:Regex>
                                    <L7p:AutoTarget booleanValue="false"/>
                                    <L7p:CaptureVar stringValue="tmp"/>
                                    <L7p:CaseInsensitive booleanValue="true"/>
                                    <L7p:Enabled booleanValue="false"/>
                                    <L7p:OtherTargetMessageVariable stringValue="payload.result"/>
                                    <L7p:Regex stringValue="\[CDATA\[(.*)\]\]"/>
                                    <L7p:RegexName stringValue="get post message"/>
                                    <L7p:Replacement stringValue=""/>
                                    <L7p:Target target="OTHER"/>
                                    </L7p:Regex>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHt0bXBbMV19"/>
                                    <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:Enabled booleanValue="false"/>
                                    <L7p:VariableToSet stringValue="argumentsXml"/>
                                    </L7p:SetVariable>
                                    <L7p:AuditDetailAssertion>
                                    <L7p:Detail stringValue="argumentsXml=${argumentsXml.mainpart}"/>
                                    <L7p:Enabled booleanValue="false"/>
                                    </L7p:AuditDetailAssertion>
                                </wsp:All>
                                <L7p:AuditDetailAssertion>
                                    <L7p:Detail stringValue="DEBUG: --- no CDATA found queryString =:${config.queryString}"/>
                                    <L7p:Enabled booleanValue="false"/>
                                </L7p:AuditDetailAssertion>
                                <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="//check  if queryStryng  contains CDATA"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:assertionComment>
                            </wsp:OneOrMore>
                            <L7p:ComparisonAssertion>
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:Enabled booleanValue="false"/>
                                <L7p:Expression1 stringValue="${config.queryString}"/>
                                <L7p:Operator operatorNull="null"/>
                                <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                    </L7p:item>
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Operator operator="CONTAINS"/>
                                    <L7p:RightValue stringValue="{"/>
                                    </L7p:item>
                                </L7p:Predicates>
                            </L7p:ComparisonAssertion>
                            <L7p:AuditDetailAssertion>
                                <L7p:Detail stringValue="queryString present"/>
                                <L7p:Enabled booleanValue="false"/>
                            </L7p:AuditDetailAssertion>
                            <wsp:OneOrMore wsp:Usage="Required">
                                <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${config.urlEncoding}"/>
                                    <L7p:Expression2 stringValue="Y"/>
                                    <L7p:FailIfVariableNotFound booleanValue="false"/>
                                    <L7p:Negate booleanValue="true"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:RightValue stringValue="Y"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                </L7p:ComparisonAssertion>
                                <L7p:EncodeDecode>
                                    <L7p:SourceVariableName stringValue="payload.result"/>
                                    <L7p:TargetDataType variableDataType="string"/>
                                    <L7p:TargetVariableName stringValue="argumentsXml"/>
                                    <L7p:TransformType transformType="URL_ENCODE"/>
                                </L7p:EncodeDecode>
                                <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// If ${urlEncode} =Y should encode"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:assertionComment>
                            </wsp:OneOrMore>
                        </wsp:All>
                        <wsp:All wsp:Usage="Required">
                            <L7p:AuditDetailAssertion>
                                <L7p:Detail stringValue="-------Create ?key=val&amp; string. No queryString."/>
                                <L7p:Level stringValue="WARNING"/>
                            </L7p:AuditDetailAssertion>
                            <L7p:ForEachLoop L7p:Usage="Required"
                                loopVariable="params.list" variablePrefix="param">
                                <L7p:AuditDetailAssertion>
                                    <L7p:Detail stringValue="Current parameter: ${param.current}"/>
                                    <L7p:Enabled booleanValue="false"/>
                                    <L7p:Level stringValue="WARNING"/>
                                </L7p:AuditDetailAssertion>
                                <L7p:AuditDetailAssertion>
                                    <L7p:Detail stringValue="Current arguments.str: ${arguments.str}"/>
                                    <L7p:Enabled booleanValue="false"/>
                                    <L7p:Level stringValue="WARNING"/>
                                </L7p:AuditDetailAssertion>
                                <L7p:Split>
                                    <L7p:InputVariable stringValue="param.current"/>
                                    <L7p:OutputVariable stringValue="args"/>
                                    <L7p:SplitPattern stringValue=":"/>
                                </L7p:Split>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHthcmdzWzBdfQ=="/>
                                    <L7p:VariableToSet stringValue="payloadArg"/>
                                </L7p:SetVariable>
                                <L7p:AuditDetailAssertion>
                                    <L7p:Detail stringValue="Current payloadArg: ${payloadArg}"/>
                                    <L7p:Enabled booleanValue="false"/>
                                    <L7p:Level stringValue="WARNING"/>
                                </L7p:AuditDetailAssertion>
                                <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ResponseXpathAssertion>
                                    <L7p:VariablePrefix stringValue="parameter"/>
                                    <L7p:XmlMsgSrc stringValue="payload.xml"/>
                                    <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="//*[lower-case(local-name())='params_list']/*[local-name()=$payloadArg]"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>
                                    <L7p:XpathVersion xpathVersion="XPATH_2_0"/>
                                    </L7p:XpathExpression>
                                    </L7p:ResponseXpathAssertion>
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${parameter.result}"/>
                                    <L7p:FailIfVariableNotFound booleanValue="false"/>
                                    <L7p:MultivaluedComparison multivaluedComparison="FIRST"/>
                                    <L7p:Operator operatorNull="null"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                    </L7p:item>
                                    <L7p:item stringLength="included">
                                    <L7p:Max intValue="-1"/>
                                    <L7p:Min intValue="1"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <wsp:OneOrMore wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${config.urlEncoding}"/>

                                    <L7p:FailIfVariableNotFound booleanValue="false"/>
                                    <L7p:Operator operatorNull="null"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                    </L7p:item>
                                    <L7p:item binary="included">

                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:RightValue stringValue="Y"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:EncodeDecode>
                                    <L7p:SourceVariableName stringValue="parameter.result"/>
                                    <L7p:TargetDataType variableDataType="string"/>
                                    <L7p:TargetVariableName stringValue="parameter.result"/>
                                    <L7p:TransformType transformType="URL_ENCODE"/>
                                    </L7p:EncodeDecode>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// If ${urlEncode} =Y should encode"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                    </wsp:OneOrMore>
                                    <L7p:SetVariable>
                                    <L7p:AssertionComment assertionComment="included">
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Append to arguments.str"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:AssertionComment>
                                    <L7p:Base64Expression stringValue="JHthcmd1bWVudHMuc3RyfSR7YXJnc1sxXX09JHtwYXJhbWV0ZXIucmVzdWx0fSY="/>
                                    <L7p:VariableToSet stringValue="arguments.str"/>
                                    </L7p:SetVariable>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// XPathed the parameter"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                    </wsp:All>
                                    <L7p:SetVariable>
                                    <L7p:AssertionComment assertionComment="included">
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Just add nothing if value isn't there"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:AssertionComment>
                                    <L7p:Base64Expression stringValue="JHthcmd1bWVudHMuc3RyfQ=="/>
                                    <L7p:VariableToSet stringValue="arguments.str"/>
                                    </L7p:SetVariable>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Append to ${arguments}"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                </wsp:OneOrMore>
                                <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="//LOOP foreach"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:assertionComment>
                            </L7p:ForEachLoop>
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="JHthcmd1bWVudHMuc3RyfQ=="/>
                                <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                                <L7p:DataType variableDataType="message"/>
                                <L7p:VariableToSet stringValue="argumentsXml"/>
                            </L7p:SetVariable>
                            <L7p:AuditDetailAssertion>
                                <L7p:Detail stringValue="argumentsXml=${argumentsXml.mainpart}"/>
                            </L7p:AuditDetailAssertion>
                        </wsp:All>
                    </wsp:OneOrMore>
                </wsp:All>
            </wsp:Policy>
        </IncludedPolicyReference>
        <IncludedPolicyReference
            RefType="com.l7tech.console.policy.exporter.IncludedPolicyReference"
            guid="9b24fba0-6ba9-4c94-9d2b-04f611c4ff46" included="true"
            name="Legacy - Escaper" soap="false" type="INCLUDE_FRAGMENT">
            <wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
                <wsp:All wsp:Usage="Required">
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*************************************************************************"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="**Legacy  Escaper"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** Escape request/response used by regular expession"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*************************************************************************"/>
                    </L7p:CommentAssertion>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="Policy Fragment: Legacy - Escaper"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHtqZGJjUXVlcnkucmV0dXJuX3ZhbHVlfQ=="/>
                        <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                        <L7p:DataType variableDataType="message"/>
                        <L7p:Enabled booleanValue="false"/>
                        <L7p:VariableToSet stringValue="responseOut"/>
                    </L7p:SetVariable>
                    <L7p:Regex>
                        <L7p:AutoTarget booleanValue="false"/>
                        <L7p:OtherTargetMessageVariable stringValue="responseOut"/>
                        <L7p:Regex stringValue="&amp;"/>
                        <L7p:RegexName stringValue="Replace &amp; with &amp;amp;"/>
                        <L7p:Replace booleanValue="true"/>
                        <L7p:Replacement stringValue="&amp;amp;"/>
                        <L7p:Target target="OTHER"/>
                    </L7p:Regex>
                    <L7p:Regex>
                        <L7p:AutoTarget booleanValue="false"/>
                        <L7p:OtherTargetMessageVariable stringValue="responseOut"/>
                        <L7p:Regex stringValue="&quot;"/>
                        <L7p:RegexName stringValue="Replace &quot; with &amp;quot;"/>
                        <L7p:Replace booleanValue="true"/>
                        <L7p:Replacement stringValue="&amp;quot;"/>
                        <L7p:Target target="OTHER"/>
                    </L7p:Regex>
                    <L7p:Regex>
                        <L7p:AutoTarget booleanValue="false"/>
                        <L7p:OtherTargetMessageVariable stringValue="responseOut"/>
                        <L7p:Regex stringValue="'"/>
                        <L7p:RegexName stringValue="Replace ' with &amp;apos;"/>
                        <L7p:Replace booleanValue="true"/>
                        <L7p:Replacement stringValue="&amp;apos;"/>
                        <L7p:Target target="OTHER"/>
                    </L7p:Regex>
                    <L7p:Regex>
                        <L7p:AutoTarget booleanValue="false"/>
                        <L7p:OtherTargetMessageVariable stringValue="responseOut"/>
                        <L7p:Regex stringValue="&lt;"/>
                        <L7p:RegexName stringValue="Replace &lt; with &amp;lt;"/>
                        <L7p:Replace booleanValue="true"/>
                        <L7p:Replacement stringValue="&amp;lt;"/>
                        <L7p:Target target="OTHER"/>
                    </L7p:Regex>
                    <L7p:Regex>
                        <L7p:AutoTarget booleanValue="false"/>
                        <L7p:OtherTargetMessageVariable stringValue="responseOut"/>
                        <L7p:Regex stringValue=">"/>
                        <L7p:RegexName stringValue="Replace > with &amp;gt;"/>
                        <L7p:Replace booleanValue="true"/>
                        <L7p:Replacement stringValue="&amp;gt;"/>
                        <L7p:Target target="OTHER"/>
                    </L7p:Regex>
                    <L7p:HardcodedResponse>
                        <L7p:Base64ResponseBody stringValue="JHtyZXNwb25zZU91dC5tYWlucGFydH0="/>
                        <L7p:Enabled booleanValue="false"/>
                    </L7p:HardcodedResponse>
                </wsp:All>
            </wsp:Policy>
        </IncludedPolicyReference>
        <IncludedPolicyReference
            RefType="com.l7tech.console.policy.exporter.IncludedPolicyReference"
            guid="6ddb2506-9999-4334-a63f-8d8df64a6edf" included="true"
            name="Legacy - Parse GET arguments" soap="false" type="INCLUDE_FRAGMENT">
            <wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
                <wsp:All wsp:Usage="Required">
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*************************************************************************"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** Legacy Parse Get arguments"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** Parse the payload for HTTP GET services"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="Build ${argumets} in order"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*************************************************************************"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*** Do the parsing"/>
                    </L7p:CommentAssertion>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="Policy Fragment: Legacy - Parse Get arguments"/>
                    </L7p:AuditDetailAssertion>
                    <wsp:OneOrMore L7p:Enabled="false" wsp:Usage="Required">
                        <wsp:All L7p:Enabled="false" wsp:Usage="Required">
                            <L7p:CacheLookup>
                                <L7p:CacheEntryKey stringValue="${serviceName}.arguments"/>
                                <L7p:CacheId stringValue="svcConfig"/>
                                <L7p:ContentTypeOverride stringValue=""/>
                                <L7p:Enabled booleanValue="false"/>
                                <L7p:MaxEntryAgeSeconds stringValue="30000"/>
                                <L7p:OtherTargetMessageVariable stringValue="arguments"/>
                                <L7p:Target target="OTHER"/>
                            </L7p:CacheLookup>
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="JHthcmd1bWVudHMubWFpbnBhcnR9"/>
                                <L7p:Enabled booleanValue="false"/>
                                <L7p:VariableToSet stringValue="params"/>
                            </L7p:SetVariable>
                        </wsp:All>
                        <L7p:AuditDetailAssertion>
                            <L7p:Detail stringValue="NO ARGUMENTS FROM CACHE!!!!!"/>
                            <L7p:Enabled booleanValue="false"/>
                        </L7p:AuditDetailAssertion>
                    </wsp:OneOrMore>
                    <L7p:SetVariable>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Cast the payload to a message type"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:Base64Expression stringValue="JHtwYXlsb2FkLnJlc3VsdH0="/>
                        <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                        <L7p:DataType variableDataType="message"/>
                        <L7p:VariableToSet stringValue="payload.xml"/>
                    </L7p:SetVariable>
                    <L7p:Split>
                        <L7p:InputVariable stringValue="params"/>
                        <L7p:OutputVariable stringValue="params.list"/>
                    </L7p:Split>
                    <L7p:ForEachLoop L7p:Usage="Required"
                        loopVariable="params.list" variablePrefix="param">
                        <L7p:Split>
                            <L7p:Enabled booleanValue="false"/>
                            <L7p:InputVariable stringValue="param.current"/>
                            <L7p:OutputVariable stringValue="args"/>
                            <L7p:SplitPattern stringValue=":"/>
                        </L7p:Split>
                        <L7p:Split>
                            <L7p:InputVariable stringValue="param.current"/>
                            <L7p:OutputVariable stringValue="param.current.list"/>
                            <L7p:SplitPattern stringValue=":"/>
                        </L7p:Split>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHthcmdzWzBdfQ=="/>
                            <L7p:Enabled booleanValue="false"/>
                            <L7p:VariableToSet stringValue="payloadArg"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtwYXJhbS5jdXJyZW50Lmxpc3RbMF19"/>
                            <L7p:VariableToSet stringValue="param.name"/>
                        </L7p:SetVariable>
                        <wsp:OneOrMore wsp:Usage="Required">
                            <wsp:All wsp:Usage="Required">
                                <L7p:AuditDetailAssertion>
                                    <L7p:Detail stringValue="####### current parameter: ${param.current}"/>
                                </L7p:AuditDetailAssertion>
                                <L7p:AuditDetailAssertion>
                                    <L7p:Detail stringValueReference="inline"><![CDATA[param.name = ${param.name}
param.current.list[1] = ${param.current.list[1]}
param.current.list[2] = ${param.current.list[2]}
payload.xml.mainpart = ${payload.xml.mainpart}]]></L7p:Detail>
                                </L7p:AuditDetailAssertion>
                                <L7p:ResponseXpathAssertion>
                                    <L7p:Enabled booleanValue="false"/>
                                    <L7p:VariablePrefix stringValue="parameter"/>
                                    <L7p:XmlMsgSrc stringValue="payload.xml"/>
                                    <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="//*[lower-case(local-name())='params_list']/*[local-name()=$payloadArg]"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>
                                    <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                                    </L7p:XpathExpression>
                                </L7p:ResponseXpathAssertion>
                                <L7p:ResponseXpathAssertion>
                                    <L7p:VariablePrefix stringValue="parameter"/>
                                    <L7p:XmlMsgSrc stringValue="payload.xml"/>
                                    <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="//PARAMS_LIST/*[local-name()=$param.name]"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>
                                    <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                                    </L7p:XpathExpression>
                                </L7p:ResponseXpathAssertion>
                                <L7p:AuditDetailAssertion>
                                    <L7p:Detail stringValue="current parameter.result: ${parameter.result}"/>
                                </L7p:AuditDetailAssertion>
                                <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${parameter.result}"/>
                                    <L7p:FailIfVariableNotFound booleanValue="false"/>
                                    <L7p:MultivaluedComparison multivaluedComparison="FIRST"/>
                                    <L7p:Operator operatorNull="null"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                    </L7p:item>
                                    <L7p:item stringLength="included">
                                    <L7p:Max intValue="-1"/>
                                    <L7p:Min intValue="1"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                </L7p:ComparisonAssertion>
                                <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${config.urlEncoding}"/>
                                    <L7p:FailIfVariableNotFound booleanValue="false"/>
                                    <L7p:Operator operatorNull="null"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                    </L7p:item>
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="Y"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:EncodeDecode>
                                    <L7p:SourceVariableName stringValue="parameter.result"/>
                                    <L7p:TargetDataType variableDataType="string"/>
                                    <L7p:TargetVariableName stringValue="parameter.result"/>
                                    <L7p:TransformType transformType="URL_ENCODE"/>
                                    </L7p:EncodeDecode>
                                    </wsp:All>
                                    <L7p:TrueAssertion>
                                    <L7p:AssertionComment assertionComment="included">
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// URL encode flag is false"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:AssertionComment>
                                    </L7p:TrueAssertion>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// URL encode for values decision"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                </wsp:OneOrMore>
                                <L7p:SetVariable>
                                    <L7p:AssertionComment assertionComment="included">
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Append to arguments.str"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:AssertionComment>
                                    <L7p:Base64Expression stringValue="JHthcmd1bWVudHMuc3RyfSYke3BhcmFtLm5hbWV9PSR7cGFyYW1ldGVyLnJlc3VsdH0="/>
                                    <L7p:VariableToSet stringValue="arguments.str"/>
                                </L7p:SetVariable>
                                <L7p:AuditDetailAssertion>
                                    <L7p:Detail stringValue="arguments.str = ${arguments.str}"/>
                                </L7p:AuditDetailAssertion>
                                <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// XPathed the parameter"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:assertionComment>
                            </wsp:All>
                            <L7p:SetVariable>
                                <L7p:AssertionComment assertionComment="included">
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// NULL"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:AssertionComment>
                                <L7p:Base64Expression stringValue="JHthcmd1bWVudHMuc3RyfSYke2FyZ3NbMV19PQ=="/>
                                <L7p:VariableToSet stringValue="arguments.str"/>
                            </L7p:SetVariable>
                            <L7p:assertionComment>
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Append to ${arguments}"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:assertionComment>
                        </wsp:OneOrMore>
                    </L7p:ForEachLoop>
                    <L7p:Regex>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Strip the trailing comma"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:AutoTarget booleanValue="false"/>
                        <L7p:OtherTargetMessageVariable stringValue="arguments.str"/>
                        <L7p:Regex stringValue="^&amp;"/>
                        <L7p:Replace booleanValue="true"/>
                        <L7p:Replacement stringValue=""/>
                        <L7p:Target target="OTHER"/>
                    </L7p:Regex>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="arguments=${arguments.mainpart}"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="arguments.str=${arguments.str}"/>
                    </L7p:AuditDetailAssertion>
                </wsp:All>
            </wsp:Policy>
        </IncludedPolicyReference>
        <IncludedPolicyReference
            RefType="com.l7tech.console.policy.exporter.IncludedPolicyReference"
            guid="71fc4b4d-9afb-4ec4-a660-3979961ac002" included="true"
            name="Legacy - IF_REPLY Validator By Xsd" soap="false" type="INCLUDE_FRAGMENT">
            <wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
                <wsp:All wsp:Usage="Required">
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*************************************************************************"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** Policy Fragment: Legacy - IF_REPLY Validator By Xsd"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** Check the IF_REPLY XML by predefined XSD"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** Parameters:"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** ${xmlcheck.isCorrect} ir true if XML match the XSD. false otherwise."/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="**  ${xmlcheck.xmlToCheckByXsd} IF_REPLY to check by XSD"/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="** "/>
                    </L7p:CommentAssertion>
                    <L7p:CommentAssertion>
                        <L7p:Comment stringValue="*************************************************************************"/>
                    </L7p:CommentAssertion>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="Policy Fragment: Legacy - IF_REQUEST Validator By Xsd"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="SUZfUkVQTFk="/>
                        <L7p:VariableToSet stringValue="xmlcheck.messageType"/>
                    </L7p:SetVariable>
                    <L7p:Include>
                        <L7p:PolicyGuid stringValue="38d37959-25bd-45ef-81e4-c7276e5b88ef"/>
                    </L7p:Include>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHt4bWxjaGVjay5pc0NvcnJlY3R9"/>
                        <L7p:VariableToSet stringValue="IF_REPLY.xml.isCorrect"/>
                    </L7p:SetVariable>
                </wsp:All>
            </wsp:Policy>
        </IncludedPolicyReference>
    </exp:References>
    <wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
        <wsp:All wsp:Usage="Required">
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="*************************************************************************"/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="**  CS_LOCK_CUSTOMER_SERVICE - http service invocation"/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="** "/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="** Make the http call to the service"/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="** "/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="*************************************************************************"/>
            </L7p:CommentAssertion>
            <L7p:AuditDetailAssertion>
                <L7p:Detail stringValue="Policy Fragment: CS_LOCK_CUSTOMER_SERVICE - invoke"/>
            </L7p:AuditDetailAssertion>
            <L7p:AuditDetailAssertion>
                <L7p:Detail stringValue="--- Invoke payload.result= ${payload.result}"/>
            </L7p:AuditDetailAssertion>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue="JHtwYXlsb2FkLnJlc3VsdH0="/>
                <L7p:VariableToSet stringValue="xmlcheck.xmlToCheckByXsd"/>
            </L7p:SetVariable>
            <L7p:Include>
                <L7p:PolicyGuid stringValue="964c6b3a-568d-40b4-adea-3cb3b1118e13"/>
            </L7p:Include>
            <wsp:OneOrMore wsp:Usage="Required">
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${config.method}"/>
                            <L7p:FailIfVariableNotFound booleanValue="false"/>
                            <L7p:Operator operatorNull="null"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                </L7p:item>
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="POST"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${config.parsed}"/>
                            <L7p:FailIfVariableNotFound booleanValue="false"/>
                            <L7p:Operator operatorNull="null"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item dataType="included">
                                    <L7p:Type variableDataType="boolean"/>
                                </L7p:item>
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="false"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${config.urlEncoding}"/>
                            <L7p:FailIfVariableNotFound booleanValue="false"/>
                            <L7p:Operator operatorNull="null"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                </L7p:item>
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="N"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:AuditDetailAssertion>
                            <L7p:Detail stringValue="// POST unparsed No UrlEncoding service HTTP Invoke - POST Unparsed case"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:Regex>
                            <L7p:AssertionComment assertionComment="included">
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="  // No encoding on POST UNPARSED"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:AssertionComment>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:OtherTargetMessageVariable stringValue="config.queryString"/>
                            <L7p:Regex stringValue="\{.+\}"/>
                            <L7p:Replace booleanValue="true"/>
                            <L7p:Replacement stringValue="${payload.result}"/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtjb25maWcucXVlcnlTdHJpbmd9"/>
                            <L7p:ContentType stringValue="text/html"/>
                            <L7p:DataType variableDataType="message"/>
                            <L7p:VariableToSet stringValue="httpRequest"/>
                        </L7p:SetVariable>
                        <L7p:AuditDetailAssertion>
                            <L7p:Detail stringValue="HttpRequest POST UNPARSED = ${httpRequest.mainpart}"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtnYXRld2F5LnRpbWUubG9jYWwuZGRNTXl5eXkgSEg6TU06c3MuU1NTMH0="/>
                            <L7p:VariableToSet stringValue="executeTime"/>
                        </L7p:SetVariable>
                        <wsp:OneOrMore wsp:Usage="Required">
                            <wsp:All wsp:Usage="Required">
                                <L7p:HttpRoutingAssertion>
                                    <L7p:FollowRedirects booleanValue="true"/>
                                    <L7p:HttpMethod httpMethod="POST"/>
                                    <L7p:ProtectedServiceUrl stringValue="${config.connection}"/>
                                    <L7p:ProxyPassword stringValueNull="null"/>
                                    <L7p:ProxyUsername stringValueNull="null"/>
                                    <L7p:RequestHeaderRules httpPassthroughRuleSet="included">
                                    <L7p:Rules httpPassthroughRules="included">
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Cookie"/>
                                    </L7p:item>
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="SOAPAction"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                    </L7p:RequestHeaderRules>
                                    <L7p:RequestMsgSrc stringValue="httpRequest"/>
                                    <L7p:RequestParamRules httpPassthroughRuleSet="included">
                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included"/>
                                    </L7p:RequestParamRules>
                                    <L7p:ResponseHeaderRules httpPassthroughRuleSet="included">
                                    <L7p:Rules httpPassthroughRules="included">
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Set-Cookie"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                    </L7p:ResponseHeaderRules>
                                    <L7p:ResponseMsgDest stringValue="HTTPoutput"/>
                                    <L7p:SamlAssertionVersion intValue="2"/>
                                    <L7p:Timeout stringValue="${providerTimeout.curr}"/>
                                </L7p:HttpRoutingAssertion>
                                <L7p:Include>
                                    <L7p:PolicyGuid stringValue="b91a07a1-1fda-45b9-83a7-519c3c4f528c"/>
                                </L7p:Include>
                            </wsp:All>
                            <L7p:Include>
                                <L7p:PolicyGuid stringValue="346df765-1a89-4206-b9de-97ddcbeeb25a"/>
                            </L7p:Include>
                        </wsp:OneOrMore>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// === POST unparsed No UrlEncoding service ==="/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${config.method}"/>
                            <L7p:FailIfVariableNotFound booleanValue="false"/>
                            <L7p:Operator operatorNull="null"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                </L7p:item>
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="POST"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${config.parsed}"/>
                            <L7p:FailIfVariableNotFound booleanValue="false"/>
                            <L7p:Operator operatorNull="null"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item dataType="included">
                                    <L7p:Type variableDataType="boolean"/>
                                </L7p:item>
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="false"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${config.urlEncoding}"/>
                            <L7p:FailIfVariableNotFound booleanValue="false"/>
                            <L7p:Operator operatorNull="null"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                </L7p:item>
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="Y"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:AuditDetailAssertion>
                            <L7p:Detail stringValue="HTTP Invoke - POST Unparsed Url Encoded case"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:Include>
                            <L7p:PolicyGuid stringValue="9ed92750-faab-438d-aba9-88d33ccb0dc8"/>
                        </L7p:Include>
                        <L7p:EncodeDecode>
                            <L7p:SourceVariableName stringValue="payload.result"/>
                            <L7p:TargetDataType variableDataType="string"/>
                            <L7p:TargetVariableName stringValue="encPayload"/>
                            <L7p:TransformType transformType="URL_ENCODE"/>
                        </L7p:EncodeDecode>
                        <L7p:Regex>
                            <L7p:AssertionComment assertionComment="included">
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="  // Encoded on POST UNPARSED"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:AssertionComment>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:OtherTargetMessageVariable stringValue="config.queryString"/>
                            <L7p:Regex stringValue="\{.+\}"/>
                            <L7p:RegexName stringValue="Extract params from queryString"/>
                            <L7p:Replace booleanValue="true"/>
                            <L7p:Replacement stringValue="${encPayload}"/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtjb25maWcucXVlcnlTdHJpbmd9"/>
                            <L7p:ContentType stringValue="application/x-www-form-urlencoded"/>
                            <L7p:DataType variableDataType="message"/>
                            <L7p:VariableToSet stringValue="httpRequest"/>
                        </L7p:SetVariable>
                        <L7p:AuditDetailAssertion>
                            <L7p:Detail stringValue="~~~-config.queryString ${config.queryString}"/>
                            <L7p:Enabled booleanValue="false"/>
                            <L7p:Level stringValue="WARNING"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:AuditDetailAssertion>
                            <L7p:Detail stringValue="~~~~~3~~~ consumerTimeout.curr=:${consumerTimeout.curr}"/>
                            <L7p:Enabled booleanValue="false"/>
                            <L7p:Level stringValue="WARNING"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:AuditDetailAssertion>
                            <L7p:Detail stringValue="~~~~~3.1~~~ providerTimeout.curr=:${providerTimeout.curr}"/>
                            <L7p:Enabled booleanValue="false"/>
                            <L7p:Level stringValue="WARNING"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:AuditDetailAssertion>
                            <L7p:Detail stringValue="~~~~3~1~1~~ providerTimeout.min=:${providerTimeout.min}"/>
                            <L7p:Enabled booleanValue="false"/>
                            <L7p:Level stringValue="WARNING"/>
                        </L7p:AuditDetailAssertion>
                        <wsp:OneOrMore wsp:Usage="Required">
                            <wsp:All wsp:Usage="Required">
                                <L7p:HttpRoutingAssertion>
                                    <L7p:FollowRedirects booleanValue="true"/>
                                    <L7p:HttpMethod httpMethod="POST"/>
                                    <L7p:ProtectedServiceUrl stringValue="${config.connection}"/>
                                    <L7p:ProxyPassword stringValueNull="null"/>
                                    <L7p:ProxyUsername stringValueNull="null"/>
                                    <L7p:RequestHeaderRules httpPassthroughRuleSet="included">
                                    <L7p:Rules httpPassthroughRules="included">
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Cookie"/>
                                    </L7p:item>
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="SOAPAction"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                    </L7p:RequestHeaderRules>
                                    <L7p:RequestMsgSrc stringValue="httpRequest"/>
                                    <L7p:RequestParamRules httpPassthroughRuleSet="included">
                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included"/>
                                    </L7p:RequestParamRules>
                                    <L7p:ResponseHeaderRules httpPassthroughRuleSet="included">
                                    <L7p:Rules httpPassthroughRules="included">
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Set-Cookie"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                    </L7p:ResponseHeaderRules>
                                    <L7p:ResponseMsgDest stringValue="HTTPoutput"/>
                                    <L7p:SamlAssertionVersion intValue="2"/>
                                    <L7p:Timeout stringValue="${providerTimeout.curr}"/>
                                </L7p:HttpRoutingAssertion>
                                <L7p:Include>
                                    <L7p:PolicyGuid stringValue="b91a07a1-1fda-45b9-83a7-519c3c4f528c"/>
                                </L7p:Include>
                            </wsp:All>
                            <L7p:Include>
                                <L7p:PolicyGuid stringValue="346df765-1a89-4206-b9de-97ddcbeeb25a"/>
                            </L7p:Include>
                        </wsp:OneOrMore>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="=== // POST Unparsed  UrlEncoding=Y service ==="/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${config.method}"/>
                            <L7p:FailIfVariableNotFound booleanValue="false"/>
                            <L7p:Operator operatorNull="null"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                </L7p:item>
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="POST"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${config.parsed}"/>
                            <L7p:FailIfVariableNotFound booleanValue="false"/>
                            <L7p:Operator operatorNull="null"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item dataType="included">
                                    <L7p:Type variableDataType="boolean"/>
                                </L7p:item>
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="true"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:AuditDetailAssertion>
                            <L7p:Detail stringValue="HTTP Invoke - POST Parsed case"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:Include>
                            <L7p:PolicyGuid stringValue="0953a947-46ac-460b-a337-4fb613062d65"/>
                        </L7p:Include>
                        <L7p:AuditDetailAssertion>
                            <L7p:Detail stringValue="HttpRequest POST PARSED  ENCODed argumentsXml = ${argumentsXml.mainpart}"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:SetVariable>
                            <L7p:AssertionComment assertionComment="included">
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="LEFT.COMMENT"/>
                                    <L7p:value stringValue="=== FOR TEST ONLY === "/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:AssertionComment>
                            <L7p:Base64Expression stringValue="Y2xpZW50X2lkPUNDJnNlc3Npb25JZD0wMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAmYWN0aW9uPWRlbGV0ZV9zdWJzY3JpYmVyJnN1YnNjcmliZXJJZD0wNTQ0NDQ0Mzk1JnVwZGF0ZWRTdWJzY3JpYmVySWQ9MDU0NjI0MjczNyY="/>
                            <L7p:ContentType stringValue="application/x-www-form-urlencoded"/>
                            <L7p:DataType variableDataType="message"/>
                            <L7p:Enabled booleanValue="false"/>
                            <L7p:VariableToSet stringValue="argumentsXml"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHthcmd1bWVudHNYbWwubWFpbnBhcnR9"/>
                            <L7p:ContentType stringValue="application/x-www-form-urlencoded"/>
                            <L7p:DataType variableDataType="message"/>
                            <L7p:VariableToSet stringValue="argumentsXml"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtnYXRld2F5LnRpbWUubG9jYWwuZGRNTXl5eXkgSEg6TU06c3MuU1NTMH0="/>
                            <L7p:VariableToSet stringValue="executeTime"/>
                        </L7p:SetVariable>
                        <wsp:OneOrMore wsp:Usage="Required">
                            <wsp:All wsp:Usage="Required">
                                <L7p:HttpRoutingAssertion>
                                    <L7p:FollowRedirects booleanValue="true"/>
                                    <L7p:HttpMethod httpMethod="POST"/>
                                    <L7p:ProtectedServiceUrl stringValue="${config.connection}"/>
                                    <L7p:ProxyPassword stringValueNull="null"/>
                                    <L7p:ProxyUsername stringValueNull="null"/>
                                    <L7p:RequestHeaderRules httpPassthroughRuleSet="included">
                                    <L7p:Rules httpPassthroughRules="included">
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Cookie"/>
                                    </L7p:item>
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="SOAPAction"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                    </L7p:RequestHeaderRules>
                                    <L7p:RequestMsgSrc stringValue="argumentsXml"/>
                                    <L7p:RequestParamRules httpPassthroughRuleSet="included">
                                    <L7p:ForwardAll booleanValue="true"/>
                                    <L7p:Rules httpPassthroughRules="included"/>
                                    </L7p:RequestParamRules>
                                    <L7p:ResponseHeaderRules httpPassthroughRuleSet="included">
                                    <L7p:Rules httpPassthroughRules="included">
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Set-Cookie"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                    </L7p:ResponseHeaderRules>
                                    <L7p:ResponseMsgDest stringValue="HTTPoutput"/>
                                    <L7p:SamlAssertionVersion intValue="2"/>
                                    <L7p:Timeout stringValue="${providerTimeout.curr}"/>
                                </L7p:HttpRoutingAssertion>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtIVFRQb3V0cHV0fQ=="/>
                                    <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:VariableToSet stringValue="responseOut"/>
                                </L7p:SetVariable>
                                <L7p:Include>
                                    <L7p:PolicyGuid stringValue="b91a07a1-1fda-45b9-83a7-519c3c4f528c"/>
                                </L7p:Include>
                            </wsp:All>
                            <L7p:Include>
                                <L7p:PolicyGuid stringValue="346df765-1a89-4206-b9de-97ddcbeeb25a"/>
                            </L7p:Include>
                        </wsp:OneOrMore>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// POST parsed  service"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="//== POST case =="/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:OneOrMore>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:AuditDetailAssertion>
                            <L7p:Detail stringValue="========== HTTP Invoke - GET case"/>
                            <L7p:Enabled booleanValue="false"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:AuditDetailAssertion>
                            <L7p:Detail stringValue="HTTP Invoke - GET case"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${config.method}"/>
                            <L7p:FailIfVariableNotFound booleanValue="false"/>
                            <L7p:Operator operatorNull="null"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                </L7p:item>
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="GET"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtwYXlsb2FkLnJlc3VsdC5tYWlucGFydH0="/>
                            <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                            <L7p:DataType variableDataType="message"/>
                            <L7p:VariableToSet stringValue="httpRequest"/>
                        </L7p:SetVariable>
                        <wsp:OneOrMore wsp:Usage="Required">
                            <wsp:All wsp:Usage="Required">
                                <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${config.parsed}"/>
                                    <L7p:FailIfVariableNotFound booleanValue="false"/>
                                    <L7p:Operator operatorNull="null"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="boolean"/>
                                    </L7p:item>
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="true"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                </L7p:ComparisonAssertion>
                                <L7p:Include>
                                    <L7p:PolicyGuid stringValue="6ddb2506-9999-4334-a63f-8d8df64a6edf"/>
                                </L7p:Include>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHthcmd1bWVudHMuc3RyfQ=="/>
                                    <L7p:VariableToSet stringValue="queryString"/>
                                </L7p:SetVariable>
                                <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// Parsed case"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:assertionComment>
                            </wsp:All>
                            <wsp:All wsp:Usage="Required">
                                <L7p:EncodeDecode>
                                    <L7p:SourceVariableName stringValue="payload.result"/>
                                    <L7p:TargetDataType variableDataType="string"/>
                                    <L7p:TargetVariableName stringValue="quotedPayload"/>
                                    <L7p:TransformType transformType="URL_ENCODE"/>
                                </L7p:EncodeDecode>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="eG1sPSR7cXVvdGVkUGF5bG9hZH0="/>
                                    <L7p:VariableToSet stringValue="queryString"/>
                                </L7p:SetVariable>
                                <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="//' Not parsed"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:assertionComment>
                            </wsp:All>
                            <L7p:assertionComment>
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="Build queryString"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:assertionComment>
                        </wsp:OneOrMore>
                        <L7p:AuditDetailAssertion>
                            <L7p:Detail stringValueReference="inline"><![CDATA[queryString =${queryString}
HttpRequest = ${httpRequest.mainpart}]]></L7p:Detail>
                        </L7p:AuditDetailAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtnYXRld2F5LnRpbWUubG9jYWwuZGRNTXl5eXkgSEg6TU06c3MuU1NTMH0="/>
                            <L7p:VariableToSet stringValue="executeTime"/>
                        </L7p:SetVariable>
                        <wsp:OneOrMore wsp:Usage="Required">
                            <wsp:All wsp:Usage="Required">
                                <L7p:HttpRoutingAssertion>
                                    <L7p:FollowRedirects booleanValue="true"/>
                                    <L7p:HttpMethod httpMethod="GET"/>
                                    <L7p:ProtectedServiceUrl stringValue="${config.connection}?${config.queryString}"/>
                                    <L7p:ProxyPassword stringValueNull="null"/>
                                    <L7p:ProxyUsername stringValueNull="null"/>
                                    <L7p:RequestHeaderRules httpPassthroughRuleSet="included">
                                    <L7p:Rules httpPassthroughRules="included">
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Cookie"/>
                                    </L7p:item>
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="SOAPAction"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                    </L7p:RequestHeaderRules>
                                    <L7p:RequestMsgSrc stringValue="httpRequest"/>
                                    <L7p:RequestParamRules httpPassthroughRuleSet="included">
                                    <L7p:Rules httpPassthroughRules="included"/>
                                    </L7p:RequestParamRules>
                                    <L7p:ResponseHeaderRules httpPassthroughRuleSet="included">
                                    <L7p:Rules httpPassthroughRules="included">
                                    <L7p:item httpPassthroughRule="included">
                                    <L7p:Name stringValue="Set-Cookie"/>
                                    </L7p:item>
                                    </L7p:Rules>
                                    </L7p:ResponseHeaderRules>
                                    <L7p:ResponseMsgDest stringValue="HTTPoutput"/>
                                    <L7p:SamlAssertionVersion intValue="2"/>
                                    <L7p:Timeout stringValue="${providerTimeout.curr}"/>
                                </L7p:HttpRoutingAssertion>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtIVFRQb3V0cHV0fQ=="/>
                                    <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:VariableToSet stringValue="responseOut"/>
                                </L7p:SetVariable>
                                <L7p:Include>
                                    <L7p:PolicyGuid stringValue="b91a07a1-1fda-45b9-83a7-519c3c4f528c"/>
                                </L7p:Include>
                            </wsp:All>
                            <L7p:Include>
                                <L7p:PolicyGuid stringValue="346df765-1a89-4206-b9de-97ddcbeeb25a"/>
                            </L7p:Include>
                        </wsp:OneOrMore>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// GET service"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// == GET case == "/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:OneOrMore>
            </wsp:OneOrMore>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue="JHtnYXRld2F5LnRpbWUubG9jYWwuZGRNTXl5eXkgSEg6TU06c3MuU1NTMH0="/>
                <L7p:VariableToSet stringValue="replayTime"/>
            </L7p:SetVariable>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue="JHtIVFRQb3V0cHV0Lm1haW5wYXJ0fQ=="/>
                <L7p:VariableToSet stringValue="responseOut"/>
            </L7p:SetVariable>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue="JHtyZXNwb25zZU91dH0="/>
                <L7p:VariableToSet stringValue="rawResponse"/>
            </L7p:SetVariable>
            <L7p:Include>
                <L7p:PolicyGuid stringValue="9b24fba0-6ba9-4c94-9d2b-04f611c4ff46"/>
            </L7p:Include>
            <L7p:AuditDetailAssertion>
                <L7p:Detail stringValue="responseOut=  ${responseOut}"/>
            </L7p:AuditDetailAssertion>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue="PHJlc3BvbnNlPiR7cmVzcG9uc2VPdXR9PC9yZXNwb25zZT4="/>
                <L7p:VariableToSet stringValue="output"/>
            </L7p:SetVariable>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue="VHJ1ZQ=="/>
                <L7p:VariableToSet stringValue="partner.tracing.response"/>
            </L7p:SetVariable>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue="JHtyZXNwb25zZU91dH0="/>
                <L7p:VariableToSet stringValue="xmlcheck.xmlToCheckByXsd"/>
            </L7p:SetVariable>
            <L7p:Include>
                <L7p:PolicyGuid stringValue="71fc4b4d-9afb-4ec4-a660-3979961ac002"/>
            </L7p:Include>
        </wsp:All>
    </wsp:Policy>
</exp:Export>
